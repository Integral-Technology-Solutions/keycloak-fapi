<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.7.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>au.com.integraltech</groupId>
	<artifactId>keycloak-fapi-test-runner</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>keycloak-fapi-test-runner</name>
	<description>Test Runner for automation of keycloak-fapi project</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-xml</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.rest-assured</groupId>
					<artifactId>json-path</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.rest-assured</groupId>
					<artifactId>xml-path</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-path</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>3.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-json</artifactId>
			<version>3.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>xml-path</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-xml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-xml</artifactId>
			<version>3.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.5.2</version>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>1.5.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.33.0</version>
				<configuration>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<!--<volumes>-->
						<!--<volume>mongodata</volume>-->
					<!--</volumes>-->
					<images>
						<image>
							<name>load_balancer</name>
							<build>
								<contextDir>${project.basedir}/load-balancer</contextDir>
								<dockerFile>Dockerfile</dockerFile>
							</build>
							<run>
								<env>
									<KEYCLOAK_FQDN>as.keycloak-fapi.org</KEYCLOAK_FQDN>
									<RESOURCE_FQDN>rs.keycloak-fapi.org</RESOURCE_FQDN>
									<CONFORMANCE_SUITE_FQDN>conformance-suite.keycloak-fapi.org</CONFORMANCE_SUITE_FQDN>
								</env>
								<ports>
									<port>443:443</port>
								</ports>
								<dependsOn>
									<container>keycloak</container>
									<container>keycloak_gatekeeper</container>
								</dependsOn>
								<network>
									<name>conformance-suite_default</name>
									<alias>as.keycloak-fapi.org</alias>
									<alias>rs.keycloak-fapi.org</alias>
								</network>
							</run>
						</image>


						<image>
							<name>keycloak</name>
							<build>
								<contextDir>${project.basedir}/keycloak</contextDir>
								<dockerFile>Dockerfile</dockerFile>
							</build>
							<run>
								<volumes>
									<bind>
										<volume>./https/server.pem:/etc/x509/https/tls.crt</volume>
										<volume>./https/server-key.pem:/etc/x509/https/tls.key</volume>
										<volume>./https/client-ca.pem:/etc/x509/https/client-ca.crt</volume>
									</bind>
								</volumes>
								<ports>
									<port>8787:8787</port>
								</ports>
								<env>
									<KEYCLOAK_USER>admin</KEYCLOAK_USER>
									<KEYCLOAK_PASSWORD>admin</KEYCLOAK_PASSWORD>
									<KEYCLOAK_BASE_IMAGE>jboss/keycloak:latest</KEYCLOAK_BASE_IMAGE>
								</env>
								<!--<entrypoint>-->
									<!--<exec>-->
										<!--<arg>-b</arg>-->
										<!--<arg>0.0.0.0</arg>-->
										<!--<arg>-Djboss.socket.binding.port-offset</arg>-->
										<!--<arg>1000</arg>-->
										<!--<arg>&#45;&#45;debug</arg>-->
									<!--</exec>-->
								<!--</entrypoint>-->
								<!--<cmd>-b 0.0.0.0 -Djboss.socket.binding.port-offset=1000 &#45;&#45;debug</cmd>-->
							</run>
						</image>


						<image>
							<name>keycloak_gatekeeper</name>
							<build>
								<contextDir>${project.basedir}/keycloak-gatekeeper</contextDir>
								<dockerFile>Dockerfile</dockerFile>
							</build>
							<run>
								<volumes>
									<bind>
										<volume>./https/server.pem:/etc/x509/https/tls.crt</volume>
										<volume>./https/server-key.pem:/etc/x509/https/tls.key</volume>
										<volume>./https/client-ca.pem:/etc/x509/https/client-ca.crt</volume>
									</bind>
								</volumes>
								<env>
									<KEYCLOAK_FQDN>as.keycloak-fapi.org</KEYCLOAK_FQDN>
									<KEYCLOAK_REALM>test</KEYCLOAK_REALM>
								</env>
								<dependsOn>
									<container>resource_server</container>
								</dependsOn>
							</run>
						</image>

						<image>
							<name>resource_server</name>
							<build>
								<contextDir>${project.basedir}/resource-server</contextDir>
								<dockerFile>Dockerfile</dockerFile>
							</build>
						</image>

						<image>
							<alias>mongodb</alias>
							<name>mongo</name>
							<run>
								<volumes>
									<bind>
										<volume>./mongo/data:/data/db</volume>
									</bind>
								</volumes>
							</run>
						</image>

						<image>
							<name>httpd</name>
							<build>
								<contextDir>${project.basedir}/conformance-suite/httpd</contextDir>
								<dockerFile>Dockerfile</dockerFile>
							</build>
							<run>
								<ports>
									<port>8443:8443</port>
								</ports>
								<dependsOn>
									<container>server</container>
								</dependsOn>
							</run>
						</image>

						<image>
							<name>server</name>
							<build>
								<contextDir>${project.basedir}/conformance-suite/server-dev</contextDir>
								<dockerFile>Dockerfile</dockerFile>
							</build>
							<run>
								<links>
									<link>mongodb:mongodb</link>
								</links>
								<dependsOn>
									<container>mongodb</container>
								</dependsOn>
								<entrypoint>
									<shell>java -jar /server/fapi-test-suite.jar -Djava.security.egd=file:/dev/./urandom --fintechlabs.base_url=https://localhost.emobix.co.uk:8443 --fintechlabs.devmode=true --fintechlabs.startredir=true</shell>
								</entrypoint>
								<!--<cmd>java -jar /server/fapi-test-suite.jar -Djava.security.egd=file:/dev/./urandom &#45;&#45;fintechlabs.base_url=https://localhost.emobix.co.uk:8443 &#45;&#45;fintechlabs.devmode=true &#45;&#45;fintechlabs.startredir=true</cmd>-->
								<!--<log>-->
									<!--<driver>json-file</driver>-->
									<!--<opts>-->
										<!--<maxSize>500k</maxSize>-->
										<!--<maxFile>5</maxFile>-->
									<!--</opts>-->
								<!--</log>-->
							</run>
						</image>


					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
